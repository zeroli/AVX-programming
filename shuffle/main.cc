#include "io.h"

#include <iostream>

void shuffle_f32()
{
    std::cout << "__m256_shuffle_ps" << "\n";
    auto x1 = _mm256_set_ps(7.f, 6.0f, 5.0f, 4.0f, 3.0f, 2.0f, 1.0f, 0.f);
    auto x2 = _mm256_set_ps(15.0f, 14.0f, 13.0f, 12.0f, 11.0f, 10.f, 9.0f, 8.0f);
    std::cout << "x1: " << simd::Make(x1) << "\n";
    std::cout << "x2: " << simd::Make(x2) << "\n";
    auto y = _mm256_shuffle_ps(x1, x2, 0b10001101);
    // 结果是8个数
    // 第一个2个数，从x1的前4个数中选择，每个数使用2bits进行选择，选择2次
    // 接下来2个数，从x2的前4个数中选择，每个数使用2bits进行选择，选择2次
    // 接下来2个数，从x1的高128位，共4个数中选择，2bits选择，选择2次
    // 最后的2个数，从x2的高128位，共4个数中选择，2bits选择，选择2次
    // 控制选择共8bits，每2个bits供选择，8bits被用来选择前4个数，也被用来选择后4个数
    std::cout << "shuffle at " << "01(1) 11(3) 00(0) 10(2) 01(1) 11(3) 00(0) 10(2)" << "\n";
    std::cout << simd::Make(y) << "\n\n";
    /*
    x1: vecf32x8{[0]=0, [1]=1, [2]=2, [3]=3, [4]=4, [5]=5, [6]=6, [7]=7}
    x2: vecf32x8{[0]=8, [1]=9, [2]=10, [3]=11, [4]=12, [5]=13, [6]=14, [7]=15}
    shuffle at 01(1) 11(3) 00(0) 10(2) 01(1) 11(3) 00(0) 10(2)
    vecf32x8{[0]=1, [1]=3, [2]=8, [3]=10, [4]=5, [5]=7, [6]=12, [7]=14}
    */
}

int main()
{
    shuffle_f32();
}
